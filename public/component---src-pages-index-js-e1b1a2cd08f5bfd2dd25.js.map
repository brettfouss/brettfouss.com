{"version":3,"sources":["webpack:///./src/components/portfolioImage.js","webpack:///./src/components/card.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/image.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["portfolioImage","_ref","imagePath","className","react_default","a","createElement","gatsby_browser_entry","query","render","data","image","allFile","edges","map","edge","node","childImageSharp","find","fixed","originalName","gatsby_image_default","_3489322982","Card","id","name","link","title","description","type","date","tags","styles","onClick","window","open","__webpack_require__","d","__webpack_exports__","IndexPage","layout","seo","keywords","CardGrid","CardRow","CardColumn","key","card","site","siteMetadata","portfolio","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","arrayOf","Image","placeholderImage","style","float","_530693198","Header","marginBottom","overflow","components_image","Footer","href","target","rel","Date","getFullYear","Layout","Fragment","header","footer","_755544856","createHTML","url","this","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-pages-index-js-e1b1a2cd08f5bfd2dd25.js","sourcesContent":["import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nexport default ({ imagePath, className }) => (\n    <StaticQuery    \n        query={\n            graphql`\n                query {\n                  allFile {\n                    edges {\n                      node {\n                        childImageSharp {\n                          fixed(width: 150, height: 100) {\n                          ...GatsbyImageSharpFixed\n                          originalName\n                        }\n                      }\n                   }\n                }\n              }\n            }`\n        }\n        render={\n            data => {\n                const image = data.allFile.edges.map(edge => edge.node.childImageSharp).find(image => image.fixed.originalName === imagePath);\n                return (\n                    <Img fixed={image.fixed} className={ className } />\n                )\n            }\n        }\n    />\n);\n\n\n\n","import React from \"react\"\nimport PortfolioImage from \"./portfolioImage\"\nimport * as styles from \"./card.module.css\"\n\nconst Card = ({ id, name, link, title, imagePath, description, type, tags, date }) => (\n    <div className={ styles.CardOuter } onClick={ () => window.open(link) }>\n        <div className={ styles.CardContainer }>\n            <div className={ styles.CardDecoration }/>\n            <div className={ styles.CardContent }>\n                <PortfolioImage imagePath={ imagePath } className={ styles.CardImage } />\n                <div className={ styles.CardText }>\n                    <p className={ styles.CardHeader }>{title}</p>\n                    <p className={ styles.CardDescription}>\n                        <span className={ styles.CardMeta }>\n                            {date} &#8226; {type}\n                        </span>\n                        <br />\n                        <br />\n                        { description }\n                    </p>\n                </div>\n            </div>\n        </div>\n    </div>\n)\n\nexport default Card;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Card from \"../components/card\"\nimport { CardGrid, CardRow, CardColumn } from \"../components/card.module.css\"\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`brett`, `fouss`, `brett fouss`, `brettfouss`]} />\n    <br />\n    <div className=\"Fluid\">\n        <p>\n            I am a data visualization practitioner and web developer based in Cambridge, Massachussets. Currently, I research and develop visual analytics tools for operational cyber security at MIT Lincoln Laboratory. Outside of work, I am interested in exploring data related to food and culture. I wish to use data science and visualization to analyze food and eating in innovative ways, as well as create tools to help home cooks.\n        </p>\n        <br />\n        <h1>Portfolio</h1>\n        <p>\n            Please find a sampling of my work below.\n            <br />\n            <br />\n            <em>Click on a card to view a project page.</em>\n        </p>\n    </div>\n    <div className={ CardGrid }>\n        <div className={ CardRow }>\n            <div className={ CardColumn } key={ 0 }>\n                <Card { ...data.site.siteMetadata.portfolio[0] } />\n            </div>\n            <div className={ CardColumn } key={ 1 }>\n                <Card { ...data.site.siteMetadata.portfolio[1] } />\n            </div>\n        </div>\n        <div className={ CardRow }>\n            <div className={ CardColumn } key={ 2 }>\n                <Card { ...data.site.siteMetadata.portfolio[2] } />\n            </div>\n        </div>\n    </div>\n    <br />\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n    query {\n        site {\n            siteMetadata {\n                portfolio {\n                    name\n                    type\n                    link\n                    title\n                    imagePath\n                    description\n                    tags\n                    date\n                }\n            }\n        }\n    }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `StaticQuery`: https://gatsby.dev/staticquery\n */\n\nconst Image = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        placeholderImage: file(relativePath: { eq: \"profile.jpg\" }) {\n          childImageSharp {\n            fixed(width: 300, height: 300) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n        <Img \n            fixed={data.placeholderImage.childImageSharp.fixed}\n            style={{\n                float: \"right\"\n            }}\n        />\n    )}\n  />\n)\nexport default Image\n","import React from \"react\"\nimport Image from \"./image\"\n\nconst Header = () => (\n    <header>\n        <h1 style={{ marginBottom: 0, overflow: \"hidden\" }}>Brett Fouss </h1>\n        <Image />\n    </header>\n)\n\nexport default Header\n","import React from \"react\"\n\nconst Footer = () => (\n    <footer>\n        <br />\n            <div className=\"FooterLinks\">\n                <p><strong>Contact, Social Media, Etc.</strong></p>\n                <p><a href=\"https://docs.google.com/document/d/1SeSeDmjY_F4WU7Ux8bD1PsEnmMvdce1q0UuvOZB1hMY/edit?usp=sharing\" target=\"_blank\" rel=\"noopener noreferrer\">Resume</a></p>\n                <p><a href=\"mailto:bmfouss@gmail.com\" target=\"_blank\" rel=\"noopener noreferrer\">Email</a></p>\n                <p><a href=\"https://www.github.com/brettfouss/\" target=\"_blank\" rel=\"noopener noreferrer\">Github</a></p>\n                <p><a href=\"https://www.linkedin.com/in/brett-fouss-697635a9\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a></p>\n                <p><a href=\"https://www.instagram.com/brettfouss/\" target=\"_blank\" rel=\"noopener noreferrer\">Instagram</a></p>\n            </div>\n            <div className=\"FooterLinks\">\n                <p>\n                    <strong>Made with <a href=\"https://www.gatsbyjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Gatsby</a></strong> © { new Date().getFullYear() } Brett Fouss\n                </p>\n            </div>\n    </footer>\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div>\n            <Header />\n            <main>{children}</main>\n            <Footer />\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}